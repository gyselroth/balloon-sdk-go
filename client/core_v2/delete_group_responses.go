// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteGroupReader is a Reader for the DeleteGroup structure.
type DeleteGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteGroupNoContent creates a DeleteGroupNoContent with default headers values
func NewDeleteGroupNoContent() *DeleteGroupNoContent {
	return &DeleteGroupNoContent{}
}

/*DeleteGroupNoContent handles this case with default header values.

If successful the server will respond with 204 No Content
*/
type DeleteGroupNoContent struct {
}

func (o *DeleteGroupNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupNoContent ", 204)
}

func (o *DeleteGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGroupForbidden creates a DeleteGroupForbidden with default headers values
func NewDeleteGroupForbidden() *DeleteGroupForbidden {
	return &DeleteGroupForbidden{}
}

/*DeleteGroupForbidden handles this case with default header values.

Access denied
*/
type DeleteGroupForbidden struct {
}

func (o *DeleteGroupForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupForbidden ", 403)
}

func (o *DeleteGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGroupNotFound creates a DeleteGroupNotFound with default headers values
func NewDeleteGroupNotFound() *DeleteGroupNotFound {
	return &DeleteGroupNotFound{}
}

/*DeleteGroupNotFound handles this case with default header values.

Resource does not exists
*/
type DeleteGroupNotFound struct {
}

func (o *DeleteGroupNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupNotFound ", 404)
}

func (o *DeleteGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
