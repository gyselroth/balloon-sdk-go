// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// DeleteGroupReader is a Reader for the DeleteGroup structure.
type DeleteGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteGroupUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteGroupNoContent creates a DeleteGroupNoContent with default headers values
func NewDeleteGroupNoContent() *DeleteGroupNoContent {
	return &DeleteGroupNoContent{}
}

/*DeleteGroupNoContent handles this case with default header values.

If successful the server will respond with 204 No Content
*/
type DeleteGroupNoContent struct {
}

func (o *DeleteGroupNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupNoContent ", 204)
}

func (o *DeleteGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGroupBadRequest creates a DeleteGroupBadRequest with default headers values
func NewDeleteGroupBadRequest() *DeleteGroupBadRequest {
	return &DeleteGroupBadRequest{}
}

/*DeleteGroupBadRequest handles this case with default header values.

Bad Reqeust
*/
type DeleteGroupBadRequest struct {
	Payload *models.CoreV2Error
}

func (o *DeleteGroupBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteGroupBadRequest) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *DeleteGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupUnauthorized creates a DeleteGroupUnauthorized with default headers values
func NewDeleteGroupUnauthorized() *DeleteGroupUnauthorized {
	return &DeleteGroupUnauthorized{}
}

/*DeleteGroupUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteGroupUnauthorized struct {
	Payload *models.CoreV2Error
}

func (o *DeleteGroupUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteGroupUnauthorized) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *DeleteGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupForbidden creates a DeleteGroupForbidden with default headers values
func NewDeleteGroupForbidden() *DeleteGroupForbidden {
	return &DeleteGroupForbidden{}
}

/*DeleteGroupForbidden handles this case with default header values.

Forbidden
*/
type DeleteGroupForbidden struct {
	Payload *models.CoreV2Error
}

func (o *DeleteGroupForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupForbidden  %+v", 403, o.Payload)
}

func (o *DeleteGroupForbidden) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *DeleteGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupNotFound creates a DeleteGroupNotFound with default headers values
func NewDeleteGroupNotFound() *DeleteGroupNotFound {
	return &DeleteGroupNotFound{}
}

/*DeleteGroupNotFound handles this case with default header values.

The specified resource was not found
*/
type DeleteGroupNotFound struct {
	Payload *models.CoreV2Error
}

func (o *DeleteGroupNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGroupNotFound) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *DeleteGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupUnprocessableEntity creates a DeleteGroupUnprocessableEntity with default headers values
func NewDeleteGroupUnprocessableEntity() *DeleteGroupUnprocessableEntity {
	return &DeleteGroupUnprocessableEntity{}
}

/*DeleteGroupUnprocessableEntity handles this case with default header values.

Unauthorized
*/
type DeleteGroupUnprocessableEntity struct {
	Payload *models.CoreV2Error
}

func (o *DeleteGroupUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteGroupUnprocessableEntity) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *DeleteGroupUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupInternalServerError creates a DeleteGroupInternalServerError with default headers values
func NewDeleteGroupInternalServerError() *DeleteGroupInternalServerError {
	return &DeleteGroupInternalServerError{}
}

/*DeleteGroupInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteGroupInternalServerError struct {
	Payload *models.CoreV2Error
}

func (o *DeleteGroupInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/groups/{group}][%d] deleteGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteGroupInternalServerError) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *DeleteGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
