// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteNodeReader is a Reader for the DeleteNode structure.
type DeleteNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteNodeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteNodeNoContent creates a DeleteNodeNoContent with default headers values
func NewDeleteNodeNoContent() *DeleteNodeNoContent {
	return &DeleteNodeNoContent{}
}

/*DeleteNodeNoContent handles this case with default header values.

If successful the server will respond with 204 No Content
*/
type DeleteNodeNoContent struct {
}

func (o *DeleteNodeNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/nodes/{node}][%d] deleteNodeNoContent ", 204)
}

func (o *DeleteNodeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNodeForbidden creates a DeleteNodeForbidden with default headers values
func NewDeleteNodeForbidden() *DeleteNodeForbidden {
	return &DeleteNodeForbidden{}
}

/*DeleteNodeForbidden handles this case with default header values.

Access denied
*/
type DeleteNodeForbidden struct {
}

func (o *DeleteNodeForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/nodes/{node}][%d] deleteNodeForbidden ", 403)
}

func (o *DeleteNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNodeNotFound creates a DeleteNodeNotFound with default headers values
func NewDeleteNodeNotFound() *DeleteNodeNotFound {
	return &DeleteNodeNotFound{}
}

/*DeleteNodeNotFound handles this case with default header values.

Resource does not exists
*/
type DeleteNodeNotFound struct {
}

func (o *DeleteNodeNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/nodes/{node}][%d] deleteNodeNotFound ", 404)
}

func (o *DeleteNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
