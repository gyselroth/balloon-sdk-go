// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// GetNodeReader is a Reader for the GetNode structure.
type GetNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNodeOK creates a GetNodeOK with default headers values
func NewGetNodeOK() *GetNodeOK {
	return &GetNodeOK{}
}

/*GetNodeOK handles this case with default header values.

Node
*/
type GetNodeOK struct {
	Payload *models.CoreV2Node
}

func (o *GetNodeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/nodes/{node}][%d] getNodeOK  %+v", 200, o.Payload)
}

func (o *GetNodeOK) GetPayload() *models.CoreV2Node {
	return o.Payload
}

func (o *GetNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Node)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNodeForbidden creates a GetNodeForbidden with default headers values
func NewGetNodeForbidden() *GetNodeForbidden {
	return &GetNodeForbidden{}
}

/*GetNodeForbidden handles this case with default header values.

Access denied
*/
type GetNodeForbidden struct {
}

func (o *GetNodeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/nodes/{node}][%d] getNodeForbidden ", 403)
}

func (o *GetNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeNotFound creates a GetNodeNotFound with default headers values
func NewGetNodeNotFound() *GetNodeNotFound {
	return &GetNodeNotFound{}
}

/*GetNodeNotFound handles this case with default header values.

Resource does not exists
*/
type GetNodeNotFound struct {
}

func (o *GetNodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/nodes/{node}][%d] getNodeNotFound ", 404)
}

func (o *GetNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
