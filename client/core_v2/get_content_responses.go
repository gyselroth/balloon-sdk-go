// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetContentReader is a Reader for the GetContent structure.
type GetContentReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetContentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetContentOK creates a GetContentOK with default headers values
func NewGetContentOK(writer io.Writer) *GetContentOK {
	return &GetContentOK{
		Payload: writer,
	}
}

/*GetContentOK handles this case with default header values.

Content
*/
type GetContentOK struct {
	Payload io.Writer
}

func (o *GetContentOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/nodes/{node}/content][%d] getContentOK  %+v", 200, o.Payload)
}

func (o *GetContentOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetContentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentForbidden creates a GetContentForbidden with default headers values
func NewGetContentForbidden() *GetContentForbidden {
	return &GetContentForbidden{}
}

/*GetContentForbidden handles this case with default header values.

Access denied
*/
type GetContentForbidden struct {
}

func (o *GetContentForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/nodes/{node}/content][%d] getContentForbidden ", 403)
}

func (o *GetContentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetContentNotFound creates a GetContentNotFound with default headers values
func NewGetContentNotFound() *GetContentNotFound {
	return &GetContentNotFound{}
}

/*GetContentNotFound handles this case with default header values.

Resource does not exists
*/
type GetContentNotFound struct {
}

func (o *GetContentNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/nodes/{node}/content][%d] getContentNotFound ", 404)
}

func (o *GetContentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
