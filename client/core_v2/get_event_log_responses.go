// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// GetEventLogReader is a Reader for the GetEventLog structure.
type GetEventLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEventLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEventLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetEventLogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEventLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEventLogOK creates a GetEventLogOK with default headers values
func NewGetEventLogOK() *GetEventLogOK {
	return &GetEventLogOK{}
}

/*GetEventLogOK handles this case with default header values.

Event log
*/
type GetEventLogOK struct {
	Payload *models.CoreV2EventLogs
}

func (o *GetEventLogOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/nodes/event-log][%d] getEventLogOK  %+v", 200, o.Payload)
}

func (o *GetEventLogOK) GetPayload() *models.CoreV2EventLogs {
	return o.Payload
}

func (o *GetEventLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2EventLogs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventLogForbidden creates a GetEventLogForbidden with default headers values
func NewGetEventLogForbidden() *GetEventLogForbidden {
	return &GetEventLogForbidden{}
}

/*GetEventLogForbidden handles this case with default header values.

Access denied
*/
type GetEventLogForbidden struct {
}

func (o *GetEventLogForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/nodes/event-log][%d] getEventLogForbidden ", 403)
}

func (o *GetEventLogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventLogNotFound creates a GetEventLogNotFound with default headers values
func NewGetEventLogNotFound() *GetEventLogNotFound {
	return &GetEventLogNotFound{}
}

/*GetEventLogNotFound handles this case with default header values.

Resource does not exists
*/
type GetEventLogNotFound struct {
}

func (o *GetEventLogNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/nodes/event-log][%d] getEventLogNotFound ", 404)
}

func (o *GetEventLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
