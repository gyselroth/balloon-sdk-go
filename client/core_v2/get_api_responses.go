// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// GetAPIReader is a Reader for the GetAPI structure.
type GetAPIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetAPIInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAPIOK creates a GetAPIOK with default headers values
func NewGetAPIOK() *GetAPIOK {
	return &GetAPIOK{}
}

/*GetAPIOK handles this case with default header values.

API root
*/
type GetAPIOK struct {
	Payload *models.CoreV2APIRoot
}

func (o *GetAPIOK) Error() string {
	return fmt.Sprintf("[GET /api][%d] getApiOK  %+v", 200, o.Payload)
}

func (o *GetAPIOK) GetPayload() *models.CoreV2APIRoot {
	return o.Payload
}

func (o *GetAPIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2APIRoot)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIInternalServerError creates a GetAPIInternalServerError with default headers values
func NewGetAPIInternalServerError() *GetAPIInternalServerError {
	return &GetAPIInternalServerError{}
}

/*GetAPIInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetAPIInternalServerError struct {
	Payload *models.CoreV2Error
}

func (o *GetAPIInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api][%d] getApiInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIInternalServerError) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetAPIInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
