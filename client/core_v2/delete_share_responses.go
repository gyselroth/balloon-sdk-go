// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteShareReader is a Reader for the DeleteShare structure.
type DeleteShareReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteShareReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteShareNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteShareForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteShareNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteShareNoContent creates a DeleteShareNoContent with default headers values
func NewDeleteShareNoContent() *DeleteShareNoContent {
	return &DeleteShareNoContent{}
}

/*DeleteShareNoContent handles this case with default header values.

The server responds with 204 if successful.
*/
type DeleteShareNoContent struct {
}

func (o *DeleteShareNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/collections/{collection}/share][%d] deleteShareNoContent ", 204)
}

func (o *DeleteShareNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteShareForbidden creates a DeleteShareForbidden with default headers values
func NewDeleteShareForbidden() *DeleteShareForbidden {
	return &DeleteShareForbidden{}
}

/*DeleteShareForbidden handles this case with default header values.

Access denied
*/
type DeleteShareForbidden struct {
}

func (o *DeleteShareForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/collections/{collection}/share][%d] deleteShareForbidden ", 403)
}

func (o *DeleteShareForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteShareNotFound creates a DeleteShareNotFound with default headers values
func NewDeleteShareNotFound() *DeleteShareNotFound {
	return &DeleteShareNotFound{}
}

/*DeleteShareNotFound handles this case with default header values.

Resource does not exists
*/
type DeleteShareNotFound struct {
}

func (o *DeleteShareNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/collections/{collection}/share][%d] deleteShareNotFound ", 404)
}

func (o *DeleteShareNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
