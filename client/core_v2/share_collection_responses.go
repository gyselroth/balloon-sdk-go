// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// ShareCollectionReader is a Reader for the ShareCollection structure.
type ShareCollectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShareCollectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewShareCollectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewShareCollectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewShareCollectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewShareCollectionOK creates a ShareCollectionOK with default headers values
func NewShareCollectionOK() *ShareCollectionOK {
	return &ShareCollectionOK{}
}

/*ShareCollectionOK handles this case with default header values.

Collection
*/
type ShareCollectionOK struct {
	Payload *models.CoreV2Collection
}

func (o *ShareCollectionOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/collections/{collection}/share][%d] shareCollectionOK  %+v", 200, o.Payload)
}

func (o *ShareCollectionOK) GetPayload() *models.CoreV2Collection {
	return o.Payload
}

func (o *ShareCollectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Collection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShareCollectionForbidden creates a ShareCollectionForbidden with default headers values
func NewShareCollectionForbidden() *ShareCollectionForbidden {
	return &ShareCollectionForbidden{}
}

/*ShareCollectionForbidden handles this case with default header values.

Access denied
*/
type ShareCollectionForbidden struct {
}

func (o *ShareCollectionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/collections/{collection}/share][%d] shareCollectionForbidden ", 403)
}

func (o *ShareCollectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShareCollectionNotFound creates a ShareCollectionNotFound with default headers values
func NewShareCollectionNotFound() *ShareCollectionNotFound {
	return &ShareCollectionNotFound{}
}

/*ShareCollectionNotFound handles this case with default header values.

Resource does not exists
*/
type ShareCollectionNotFound struct {
}

func (o *ShareCollectionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/collections/{collection}/share][%d] shareCollectionNotFound ", 404)
}

func (o *ShareCollectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
