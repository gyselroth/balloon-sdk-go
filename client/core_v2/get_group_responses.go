// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// GetGroupReader is a Reader for the GetGroup structure.
type GetGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetGroupOK creates a GetGroupOK with default headers values
func NewGetGroupOK() *GetGroupOK {
	return &GetGroupOK{}
}

/*GetGroupOK handles this case with default header values.

Group
*/
type GetGroupOK struct {
	Payload *models.CoreV2Group
}

func (o *GetGroupOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{group}][%d] getGroupOK  %+v", 200, o.Payload)
}

func (o *GetGroupOK) GetPayload() *models.CoreV2Group {
	return o.Payload
}

func (o *GetGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Group)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupForbidden creates a GetGroupForbidden with default headers values
func NewGetGroupForbidden() *GetGroupForbidden {
	return &GetGroupForbidden{}
}

/*GetGroupForbidden handles this case with default header values.

Access denied
*/
type GetGroupForbidden struct {
}

func (o *GetGroupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{group}][%d] getGroupForbidden ", 403)
}

func (o *GetGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupNotFound creates a GetGroupNotFound with default headers values
func NewGetGroupNotFound() *GetGroupNotFound {
	return &GetGroupNotFound{}
}

/*GetGroupNotFound handles this case with default header values.

Resource does not exists
*/
type GetGroupNotFound struct {
}

func (o *GetGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/groups/{group}][%d] getGroupNotFound ", 404)
}

func (o *GetGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
