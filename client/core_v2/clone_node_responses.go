// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// CloneNodeReader is a Reader for the CloneNode structure.
type CloneNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloneNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCloneNodeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewCloneNodeMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloneNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCloneNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloneNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCloneNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCloneNodeUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloneNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCloneNodeCreated creates a CloneNodeCreated with default headers values
func NewCloneNodeCreated() *CloneNodeCreated {
	return &CloneNodeCreated{}
}

/*CloneNodeCreated handles this case with default header values.

Node
*/
type CloneNodeCreated struct {
	Payload *models.CoreV2Node
}

func (o *CloneNodeCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/nodes/{node}/clone][%d] cloneNodeCreated  %+v", 201, o.Payload)
}

func (o *CloneNodeCreated) GetPayload() *models.CoreV2Node {
	return o.Payload
}

func (o *CloneNodeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Node)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneNodeMultiStatus creates a CloneNodeMultiStatus with default headers values
func NewCloneNodeMultiStatus() *CloneNodeMultiStatus {
	return &CloneNodeMultiStatus{}
}

/*CloneNodeMultiStatus handles this case with default header values.

Multi status if batch request
*/
type CloneNodeMultiStatus struct {
}

func (o *CloneNodeMultiStatus) Error() string {
	return fmt.Sprintf("[POST /api/v2/nodes/{node}/clone][%d] cloneNodeMultiStatus ", 207)
}

func (o *CloneNodeMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCloneNodeBadRequest creates a CloneNodeBadRequest with default headers values
func NewCloneNodeBadRequest() *CloneNodeBadRequest {
	return &CloneNodeBadRequest{}
}

/*CloneNodeBadRequest handles this case with default header values.

Bad Reqeust
*/
type CloneNodeBadRequest struct {
	Payload *models.CoreV2Error
}

func (o *CloneNodeBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/nodes/{node}/clone][%d] cloneNodeBadRequest  %+v", 400, o.Payload)
}

func (o *CloneNodeBadRequest) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *CloneNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneNodeUnauthorized creates a CloneNodeUnauthorized with default headers values
func NewCloneNodeUnauthorized() *CloneNodeUnauthorized {
	return &CloneNodeUnauthorized{}
}

/*CloneNodeUnauthorized handles this case with default header values.

Unauthorized
*/
type CloneNodeUnauthorized struct {
	Payload *models.CoreV2Error
}

func (o *CloneNodeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/nodes/{node}/clone][%d] cloneNodeUnauthorized  %+v", 401, o.Payload)
}

func (o *CloneNodeUnauthorized) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *CloneNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneNodeForbidden creates a CloneNodeForbidden with default headers values
func NewCloneNodeForbidden() *CloneNodeForbidden {
	return &CloneNodeForbidden{}
}

/*CloneNodeForbidden handles this case with default header values.

Forbidden
*/
type CloneNodeForbidden struct {
	Payload *models.CoreV2Error
}

func (o *CloneNodeForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/nodes/{node}/clone][%d] cloneNodeForbidden  %+v", 403, o.Payload)
}

func (o *CloneNodeForbidden) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *CloneNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneNodeNotFound creates a CloneNodeNotFound with default headers values
func NewCloneNodeNotFound() *CloneNodeNotFound {
	return &CloneNodeNotFound{}
}

/*CloneNodeNotFound handles this case with default header values.

The specified resource was not found
*/
type CloneNodeNotFound struct {
	Payload *models.CoreV2Error
}

func (o *CloneNodeNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/nodes/{node}/clone][%d] cloneNodeNotFound  %+v", 404, o.Payload)
}

func (o *CloneNodeNotFound) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *CloneNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneNodeUnprocessableEntity creates a CloneNodeUnprocessableEntity with default headers values
func NewCloneNodeUnprocessableEntity() *CloneNodeUnprocessableEntity {
	return &CloneNodeUnprocessableEntity{}
}

/*CloneNodeUnprocessableEntity handles this case with default header values.

Unauthorized
*/
type CloneNodeUnprocessableEntity struct {
	Payload *models.CoreV2Error
}

func (o *CloneNodeUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/v2/nodes/{node}/clone][%d] cloneNodeUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CloneNodeUnprocessableEntity) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *CloneNodeUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneNodeInternalServerError creates a CloneNodeInternalServerError with default headers values
func NewCloneNodeInternalServerError() *CloneNodeInternalServerError {
	return &CloneNodeInternalServerError{}
}

/*CloneNodeInternalServerError handles this case with default header values.

Internal Server Error
*/
type CloneNodeInternalServerError struct {
	Payload *models.CoreV2Error
}

func (o *CloneNodeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/nodes/{node}/clone][%d] cloneNodeInternalServerError  %+v", 500, o.Payload)
}

func (o *CloneNodeInternalServerError) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *CloneNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
