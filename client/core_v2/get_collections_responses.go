// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// GetCollectionsReader is a Reader for the GetCollections structure.
type GetCollectionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCollectionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCollectionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetCollectionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCollectionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCollectionsOK creates a GetCollectionsOK with default headers values
func NewGetCollectionsOK() *GetCollectionsOK {
	return &GetCollectionsOK{}
}

/*GetCollectionsOK handles this case with default header values.

List of collections
*/
type GetCollectionsOK struct {
	Payload *models.CoreV2Collections
}

func (o *GetCollectionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/collections][%d] getCollectionsOK  %+v", 200, o.Payload)
}

func (o *GetCollectionsOK) GetPayload() *models.CoreV2Collections {
	return o.Payload
}

func (o *GetCollectionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Collections)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCollectionsForbidden creates a GetCollectionsForbidden with default headers values
func NewGetCollectionsForbidden() *GetCollectionsForbidden {
	return &GetCollectionsForbidden{}
}

/*GetCollectionsForbidden handles this case with default header values.

Access denied
*/
type GetCollectionsForbidden struct {
}

func (o *GetCollectionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/collections][%d] getCollectionsForbidden ", 403)
}

func (o *GetCollectionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCollectionsNotFound creates a GetCollectionsNotFound with default headers values
func NewGetCollectionsNotFound() *GetCollectionsNotFound {
	return &GetCollectionsNotFound{}
}

/*GetCollectionsNotFound handles this case with default header values.

Resource does not exists
*/
type GetCollectionsNotFound struct {
}

func (o *GetCollectionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/collections][%d] getCollectionsNotFound ", 404)
}

func (o *GetCollectionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
