// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// GetUserGroupsReader is a Reader for the GetUserGroups structure.
type GetUserGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetUserGroupsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserGroupsOK creates a GetUserGroupsOK with default headers values
func NewGetUserGroupsOK() *GetUserGroupsOK {
	return &GetUserGroupsOK{}
}

/*GetUserGroupsOK handles this case with default header values.

List of groups
*/
type GetUserGroupsOK struct {
	Payload *models.CoreV2Groups
}

func (o *GetUserGroupsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{user}/groups][%d] getUserGroupsOK  %+v", 200, o.Payload)
}

func (o *GetUserGroupsOK) GetPayload() *models.CoreV2Groups {
	return o.Payload
}

func (o *GetUserGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Groups)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupsBadRequest creates a GetUserGroupsBadRequest with default headers values
func NewGetUserGroupsBadRequest() *GetUserGroupsBadRequest {
	return &GetUserGroupsBadRequest{}
}

/*GetUserGroupsBadRequest handles this case with default header values.

Bad Reqeust
*/
type GetUserGroupsBadRequest struct {
	Payload *models.CoreV2Error
}

func (o *GetUserGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{user}/groups][%d] getUserGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserGroupsBadRequest) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetUserGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupsUnauthorized creates a GetUserGroupsUnauthorized with default headers values
func NewGetUserGroupsUnauthorized() *GetUserGroupsUnauthorized {
	return &GetUserGroupsUnauthorized{}
}

/*GetUserGroupsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUserGroupsUnauthorized struct {
	Payload *models.CoreV2Error
}

func (o *GetUserGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{user}/groups][%d] getUserGroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserGroupsUnauthorized) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetUserGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupsForbidden creates a GetUserGroupsForbidden with default headers values
func NewGetUserGroupsForbidden() *GetUserGroupsForbidden {
	return &GetUserGroupsForbidden{}
}

/*GetUserGroupsForbidden handles this case with default header values.

Forbidden
*/
type GetUserGroupsForbidden struct {
	Payload *models.CoreV2Error
}

func (o *GetUserGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{user}/groups][%d] getUserGroupsForbidden  %+v", 403, o.Payload)
}

func (o *GetUserGroupsForbidden) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetUserGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupsNotFound creates a GetUserGroupsNotFound with default headers values
func NewGetUserGroupsNotFound() *GetUserGroupsNotFound {
	return &GetUserGroupsNotFound{}
}

/*GetUserGroupsNotFound handles this case with default header values.

The specified resource was not found
*/
type GetUserGroupsNotFound struct {
	Payload *models.CoreV2Error
}

func (o *GetUserGroupsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{user}/groups][%d] getUserGroupsNotFound  %+v", 404, o.Payload)
}

func (o *GetUserGroupsNotFound) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetUserGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupsUnprocessableEntity creates a GetUserGroupsUnprocessableEntity with default headers values
func NewGetUserGroupsUnprocessableEntity() *GetUserGroupsUnprocessableEntity {
	return &GetUserGroupsUnprocessableEntity{}
}

/*GetUserGroupsUnprocessableEntity handles this case with default header values.

Unauthorized
*/
type GetUserGroupsUnprocessableEntity struct {
	Payload *models.CoreV2Error
}

func (o *GetUserGroupsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{user}/groups][%d] getUserGroupsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetUserGroupsUnprocessableEntity) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetUserGroupsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupsInternalServerError creates a GetUserGroupsInternalServerError with default headers values
func NewGetUserGroupsInternalServerError() *GetUserGroupsInternalServerError {
	return &GetUserGroupsInternalServerError{}
}

/*GetUserGroupsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetUserGroupsInternalServerError struct {
	Payload *models.CoreV2Error
}

func (o *GetUserGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{user}/groups][%d] getUserGroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserGroupsInternalServerError) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetUserGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
