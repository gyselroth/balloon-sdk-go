// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// GetFileHistoryReader is a Reader for the GetFileHistory structure.
type GetFileHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFileHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFileHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFileHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFileHistoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFileHistoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFileHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetFileHistoryUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFileHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFileHistoryOK creates a GetFileHistoryOK with default headers values
func NewGetFileHistoryOK() *GetFileHistoryOK {
	return &GetFileHistoryOK{}
}

/*GetFileHistoryOK handles this case with default header values.

File history
*/
type GetFileHistoryOK struct {
	Payload *models.CoreV2FileHistory
}

func (o *GetFileHistoryOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/files/{file}/history][%d] getFileHistoryOK  %+v", 200, o.Payload)
}

func (o *GetFileHistoryOK) GetPayload() *models.CoreV2FileHistory {
	return o.Payload
}

func (o *GetFileHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2FileHistory)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileHistoryBadRequest creates a GetFileHistoryBadRequest with default headers values
func NewGetFileHistoryBadRequest() *GetFileHistoryBadRequest {
	return &GetFileHistoryBadRequest{}
}

/*GetFileHistoryBadRequest handles this case with default header values.

Bad Reqeust
*/
type GetFileHistoryBadRequest struct {
	Payload *models.CoreV2Error
}

func (o *GetFileHistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/files/{file}/history][%d] getFileHistoryBadRequest  %+v", 400, o.Payload)
}

func (o *GetFileHistoryBadRequest) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetFileHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileHistoryUnauthorized creates a GetFileHistoryUnauthorized with default headers values
func NewGetFileHistoryUnauthorized() *GetFileHistoryUnauthorized {
	return &GetFileHistoryUnauthorized{}
}

/*GetFileHistoryUnauthorized handles this case with default header values.

Unauthorized
*/
type GetFileHistoryUnauthorized struct {
	Payload *models.CoreV2Error
}

func (o *GetFileHistoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/files/{file}/history][%d] getFileHistoryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFileHistoryUnauthorized) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetFileHistoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileHistoryForbidden creates a GetFileHistoryForbidden with default headers values
func NewGetFileHistoryForbidden() *GetFileHistoryForbidden {
	return &GetFileHistoryForbidden{}
}

/*GetFileHistoryForbidden handles this case with default header values.

Forbidden
*/
type GetFileHistoryForbidden struct {
	Payload *models.CoreV2Error
}

func (o *GetFileHistoryForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/files/{file}/history][%d] getFileHistoryForbidden  %+v", 403, o.Payload)
}

func (o *GetFileHistoryForbidden) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetFileHistoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileHistoryNotFound creates a GetFileHistoryNotFound with default headers values
func NewGetFileHistoryNotFound() *GetFileHistoryNotFound {
	return &GetFileHistoryNotFound{}
}

/*GetFileHistoryNotFound handles this case with default header values.

The specified resource was not found
*/
type GetFileHistoryNotFound struct {
	Payload *models.CoreV2Error
}

func (o *GetFileHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/files/{file}/history][%d] getFileHistoryNotFound  %+v", 404, o.Payload)
}

func (o *GetFileHistoryNotFound) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetFileHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileHistoryUnprocessableEntity creates a GetFileHistoryUnprocessableEntity with default headers values
func NewGetFileHistoryUnprocessableEntity() *GetFileHistoryUnprocessableEntity {
	return &GetFileHistoryUnprocessableEntity{}
}

/*GetFileHistoryUnprocessableEntity handles this case with default header values.

Unauthorized
*/
type GetFileHistoryUnprocessableEntity struct {
	Payload *models.CoreV2Error
}

func (o *GetFileHistoryUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v2/files/{file}/history][%d] getFileHistoryUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetFileHistoryUnprocessableEntity) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetFileHistoryUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileHistoryInternalServerError creates a GetFileHistoryInternalServerError with default headers values
func NewGetFileHistoryInternalServerError() *GetFileHistoryInternalServerError {
	return &GetFileHistoryInternalServerError{}
}

/*GetFileHistoryInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetFileHistoryInternalServerError struct {
	Payload *models.CoreV2Error
}

func (o *GetFileHistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/files/{file}/history][%d] getFileHistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFileHistoryInternalServerError) GetPayload() *models.CoreV2Error {
	return o.Payload
}

func (o *GetFileHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
