// Code generated by go-swagger; DO NOT EDIT.

package core_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// AddGroupReader is a Reader for the AddGroup structure.
type AddGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddGroupCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAddGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddGroupCreated creates a AddGroupCreated with default headers values
func NewAddGroupCreated() *AddGroupCreated {
	return &AddGroupCreated{}
}

/*AddGroupCreated handles this case with default header values.

If successful the server will respond with 201 Created
*/
type AddGroupCreated struct {
	Payload *models.CoreV2Group
}

func (o *AddGroupCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/groups][%d] addGroupCreated  %+v", 201, o.Payload)
}

func (o *AddGroupCreated) GetPayload() *models.CoreV2Group {
	return o.Payload
}

func (o *AddGroupCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreV2Group)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddGroupForbidden creates a AddGroupForbidden with default headers values
func NewAddGroupForbidden() *AddGroupForbidden {
	return &AddGroupForbidden{}
}

/*AddGroupForbidden handles this case with default header values.

Access denied
*/
type AddGroupForbidden struct {
}

func (o *AddGroupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/groups][%d] addGroupForbidden ", 403)
}

func (o *AddGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
