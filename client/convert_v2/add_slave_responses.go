// Code generated by go-swagger; DO NOT EDIT.

package convert_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// AddSlaveReader is a Reader for the AddSlave structure.
type AddSlaveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSlaveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewAddSlaveAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAddSlaveForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddSlaveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddSlaveAccepted creates a AddSlaveAccepted with default headers values
func NewAddSlaveAccepted() *AddSlaveAccepted {
	return &AddSlaveAccepted{}
}

/*AddSlaveAccepted handles this case with default header values.

Slave
*/
type AddSlaveAccepted struct {
	Payload *models.ConvertV2Slave
}

func (o *AddSlaveAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/files/{file}/convert/slaves][%d] addSlaveAccepted  %+v", 202, o.Payload)
}

func (o *AddSlaveAccepted) GetPayload() *models.ConvertV2Slave {
	return o.Payload
}

func (o *AddSlaveAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConvertV2Slave)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSlaveForbidden creates a AddSlaveForbidden with default headers values
func NewAddSlaveForbidden() *AddSlaveForbidden {
	return &AddSlaveForbidden{}
}

/*AddSlaveForbidden handles this case with default header values.

Access denied
*/
type AddSlaveForbidden struct {
}

func (o *AddSlaveForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/files/{file}/convert/slaves][%d] addSlaveForbidden ", 403)
}

func (o *AddSlaveForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSlaveNotFound creates a AddSlaveNotFound with default headers values
func NewAddSlaveNotFound() *AddSlaveNotFound {
	return &AddSlaveNotFound{}
}

/*AddSlaveNotFound handles this case with default header values.

Resource does not exists
*/
type AddSlaveNotFound struct {
}

func (o *AddSlaveNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/files/{file}/convert/slaves][%d] addSlaveNotFound ", 404)
}

func (o *AddSlaveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
