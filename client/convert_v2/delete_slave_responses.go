// Code generated by go-swagger; DO NOT EDIT.

package convert_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSlaveReader is a Reader for the DeleteSlave structure.
type DeleteSlaveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSlaveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteSlaveNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteSlaveForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSlaveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSlaveNoContent creates a DeleteSlaveNoContent with default headers values
func NewDeleteSlaveNoContent() *DeleteSlaveNoContent {
	return &DeleteSlaveNoContent{}
}

/*DeleteSlaveNoContent handles this case with default header values.

If successful the server will respond with 204 No Content
*/
type DeleteSlaveNoContent struct {
}

func (o *DeleteSlaveNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/files/{file}/convert/slaves/{slave}][%d] deleteSlaveNoContent ", 204)
}

func (o *DeleteSlaveNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSlaveForbidden creates a DeleteSlaveForbidden with default headers values
func NewDeleteSlaveForbidden() *DeleteSlaveForbidden {
	return &DeleteSlaveForbidden{}
}

/*DeleteSlaveForbidden handles this case with default header values.

Access denied
*/
type DeleteSlaveForbidden struct {
}

func (o *DeleteSlaveForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/files/{file}/convert/slaves/{slave}][%d] deleteSlaveForbidden ", 403)
}

func (o *DeleteSlaveForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSlaveNotFound creates a DeleteSlaveNotFound with default headers values
func NewDeleteSlaveNotFound() *DeleteSlaveNotFound {
	return &DeleteSlaveNotFound{}
}

/*DeleteSlaveNotFound handles this case with default header values.

Resource does not exists
*/
type DeleteSlaveNotFound struct {
}

func (o *DeleteSlaveNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/files/{file}/convert/slaves/{slave}][%d] deleteSlaveNotFound ", 404)
}

func (o *DeleteSlaveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
