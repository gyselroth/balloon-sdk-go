// Code generated by go-swagger; DO NOT EDIT.

package notification_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// PostNotificationReader is a Reader for the PostNotification structure.
type PostNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostNotificationAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostNotificationAccepted creates a PostNotificationAccepted with default headers values
func NewPostNotificationAccepted() *PostNotificationAccepted {
	return &PostNotificationAccepted{}
}

/*PostNotificationAccepted handles this case with default header values.

Notification
*/
type PostNotificationAccepted struct {
	Payload *models.NotificationV2Notification
}

func (o *PostNotificationAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications][%d] postNotificationAccepted  %+v", 202, o.Payload)
}

func (o *PostNotificationAccepted) GetPayload() *models.NotificationV2Notification {
	return o.Payload
}

func (o *PostNotificationAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotificationV2Notification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
