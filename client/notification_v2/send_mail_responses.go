// Code generated by go-swagger; DO NOT EDIT.

package notification_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SendMailReader is a Reader for the SendMail structure.
type SendMailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendMailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewSendMailAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSendMailForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendMailAccepted creates a SendMailAccepted with default headers values
func NewSendMailAccepted() *SendMailAccepted {
	return &SendMailAccepted{}
}

/*SendMailAccepted handles this case with default header values.

Mail
*/
type SendMailAccepted struct {
}

func (o *SendMailAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/mail][%d] sendMailAccepted ", 202)
}

func (o *SendMailAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendMailForbidden creates a SendMailForbidden with default headers values
func NewSendMailForbidden() *SendMailForbidden {
	return &SendMailForbidden{}
}

/*SendMailForbidden handles this case with default header values.

Access denied
*/
type SendMailForbidden struct {
}

func (o *SendMailForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/notifications/mail][%d] sendMailForbidden ", 403)
}

func (o *SendMailForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
