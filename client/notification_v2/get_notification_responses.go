// Code generated by go-swagger; DO NOT EDIT.

package notification_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gyselroth/balloon-sdk-go/models"
)

// GetNotificationReader is a Reader for the GetNotification structure.
type GetNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNotificationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetNotificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNotificationOK creates a GetNotificationOK with default headers values
func NewGetNotificationOK() *GetNotificationOK {
	return &GetNotificationOK{}
}

/*GetNotificationOK handles this case with default header values.

Notification
*/
type GetNotificationOK struct {
	Payload *models.NotificationV2Notification
}

func (o *GetNotificationOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/{notification}][%d] getNotificationOK  %+v", 200, o.Payload)
}

func (o *GetNotificationOK) GetPayload() *models.NotificationV2Notification {
	return o.Payload
}

func (o *GetNotificationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotificationV2Notification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationForbidden creates a GetNotificationForbidden with default headers values
func NewGetNotificationForbidden() *GetNotificationForbidden {
	return &GetNotificationForbidden{}
}

/*GetNotificationForbidden handles this case with default header values.

Access denied
*/
type GetNotificationForbidden struct {
}

func (o *GetNotificationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/{notification}][%d] getNotificationForbidden ", 403)
}

func (o *GetNotificationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNotificationNotFound creates a GetNotificationNotFound with default headers values
func NewGetNotificationNotFound() *GetNotificationNotFound {
	return &GetNotificationNotFound{}
}

/*GetNotificationNotFound handles this case with default header values.

Resource does not exists
*/
type GetNotificationNotFound struct {
}

func (o *GetNotificationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/notifications/{notification}][%d] getNotificationNotFound ", 404)
}

func (o *GetNotificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
