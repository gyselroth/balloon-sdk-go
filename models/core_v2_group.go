// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CoreV2Group A group contains user resources.
// swagger:model core.v2.Group
type CoreV2Group struct {
	CoreV2Resource

	// ISO 8601 timestamp when the resource was changed.
	// Format: date-time
	Changed strfmt.DateTime `json:"changed,omitempty"`

	// Array of user id's.
	Member []string `json:"member"`

	// Group name.
	Name string `json:"name,omitempty"`

	// User namespace.
	Namespace string `json:"namespace,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *CoreV2Group) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 CoreV2Resource
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.CoreV2Resource = aO0

	// AO1
	var dataAO1 struct {
		Changed strfmt.DateTime `json:"changed,omitempty"`

		Member []string `json:"member"`

		Name string `json:"name,omitempty"`

		Namespace string `json:"namespace,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.Changed = dataAO1.Changed

	m.Member = dataAO1.Member

	m.Name = dataAO1.Name

	m.Namespace = dataAO1.Namespace

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m CoreV2Group) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.CoreV2Resource)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		Changed strfmt.DateTime `json:"changed,omitempty"`

		Member []string `json:"member"`

		Name string `json:"name,omitempty"`

		Namespace string `json:"namespace,omitempty"`
	}

	dataAO1.Changed = m.Changed

	dataAO1.Member = m.Member

	dataAO1.Name = m.Name

	dataAO1.Namespace = m.Namespace

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this core v2 group
func (m *CoreV2Group) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with CoreV2Resource
	if err := m.CoreV2Resource.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateChanged(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CoreV2Group) validateChanged(formats strfmt.Registry) error {

	if swag.IsZero(m.Changed) { // not required
		return nil
	}

	if err := validate.FormatOf("changed", "body", "date-time", m.Changed.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CoreV2Group) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CoreV2Group) UnmarshalBinary(b []byte) error {
	var res CoreV2Group
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
